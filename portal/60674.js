(self.webpackChunkportal=self.webpackChunkportal||[]).push([[60674],{20710:(g,n,s)=>{s.d(n,{e:()=>d});var a=s(4125),c=s(27437),v=s(81011),u=s(92482),e=s(11705),i=s(76164),_=s(95909);let d=(()=>{class l{constructor(o,p,I,N){this.localizationService=o,this.profileService=p,this.toasterService=I,this.userProfileService=N,this.profileSettings=new a.BehaviorSubject(null),this.profileSettings$=this.profileSettings.asObservable().pipe((0,a.filter)(m=>null!=m)),this.employeeProfile=new a.BehaviorSubject(null),this.employeeProfile$=this.employeeProfile.asObservable().pipe((0,a.filter)(m=>null!=m));const P=Number(localStorage.getItem("selectedImage")),E=Number(localStorage.getItem("nextImage"));this.profileService.getUserProfileSettings().subscribe(m=>{null!==m.backgroundImageId&&P==u.AppConsts.swapImagesIndex&&(m.backgroundImageId=E<u.AppConsts.backgroundImagesCount-1?E+1:0,localStorage.setItem("nextImage",m.backgroundImageId.toString())),this.profileSettings.next(m)}),this.userProfileService.getIdentificationCard().subscribe(m=>this.employeeProfile.next(m))}updateProfileSettings(o){this.profileSettings.next(o),this.profileService.saveUserProfileSettingsByProfileSetting(o).subscribe(),this.toasterService.success(this.localizationService.instant("::Success"))}updateProfileImage(o){const p=this.employeeProfile.value;p&&(p.imageId=o,this.employeeProfile.next(p))}static#e=this.\u0275fac=function(p){return new(p||l)(e.\u0275\u0275inject(v.LocalizationService),e.\u0275\u0275inject(i.H),e.\u0275\u0275inject(c.ToasterService),e.\u0275\u0275inject(_.i))};static#t=this.\u0275prov=e.\u0275\u0275defineInjectable({token:l,factory:l.\u0275fac,providedIn:"root"})}return l})()},67295:(g,n,s)=>{s.d(n,{G:()=>t});var a=s(4125),c=s(27437),v=s(81011),u=s(11705),e=s(63584);let t=(()=>{class i{constructor(d,l,f){this.localizationService=d,this.service=l,this.toasterService=f,this.quickAccessServices=new a.BehaviorSubject(null),this.quickAccessServices$=this.quickAccessServices.asObservable().pipe((0,a.filter)(o=>null!=o)),this.service.getUserQuickAccessServiceList().subscribe(o=>this.quickAccessServices.next(o))}updateQuickAccessService(d){this.quickAccessServices.next(d),this.service.updateUserQuickAccessServiceList(d.map(l=>l.serviceId)).subscribe(),this.toasterService.success(this.localizationService.instant("::Success"))}static#e=this.\u0275fac=function(l){return new(l||i)(u.\u0275\u0275inject(v.LocalizationService),u.\u0275\u0275inject(e.t),u.\u0275\u0275inject(c.ToasterService))};static#t=this.\u0275prov=u.\u0275\u0275defineInjectable({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})()},76164:(g,n,s)=>{s.d(n,{H:()=>v});var a=s(81011),c=s(11705);let v=(()=>{class r{constructor(h){this.restService=h,this.apiName="CMSService",this.getUserProfileSettings=e=>this.restService.request({method:"GET",url:"/api/cms-service/employees-profile/user-profile-settings"},{apiName:this.apiName,...e}),this.saveUserProfileSettingsByProfileSetting=(e,t)=>this.restService.request({method:"POST",url:"/api/cms-service/employees-profile/save-user-profile-settings",body:e},{apiName:this.apiName,...t})}static#e=this.\u0275fac=function(e){return new(e||r)(c.\u0275\u0275inject(a.RestService))};static#t=this.\u0275prov=c.\u0275\u0275defineInjectable({token:r,factory:r.\u0275fac,providedIn:"root"})}return r})()},63584:(g,n,s)=>{s.d(n,{t:()=>v});var a=s(81011),c=s(11705);let v=(()=>{class r{constructor(h){this.restService=h,this.apiName="CMSService",this.addFavoriteServiceById=(e,t)=>this.restService.request({method:"POST",url:`/api/cms-service/services/AddFavoriteService/${e}`},{apiName:this.apiName,...t}),this.attachment_Delete=(e,t,i)=>this.restService.request({method:"DELETE",url:`/api/cms-service/services/Attachment_DeleteAsync/${e}/${t}`},{apiName:this.apiName,...i}),this.attachment_GetList=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/Attachment_GetListAsync",params:{filterText:e.filterText,fileName:e.fileName,extension:e.extension,fileSizeMin:e.fileSizeMin,fileSizeMax:e.fileSizeMax,attachmentStatus:e.attachmentStatus,attachmentRef:e.attachmentRef,externalId:e.externalId,entity:e.entity,attachmentDetailFileId:e.attachmentDetailFileId,attachmentId:e.attachmentId,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.canChangeDefaultServices=e=>this.restService.request({method:"GET",url:"/api/cms-service/services/CanChangeDefaultServices"},{apiName:this.apiName,...e}),this.create=(e,t)=>this.restService.request({method:"POST",url:"/api/cms-service/services",body:e},{apiName:this.apiName,...t}),this.createServicesCategories=(e,t)=>this.restService.request({method:"POST",url:"/api/cms-service/services/CreateCategories",body:e},{apiName:this.apiName,...t}),this.createServicesSubCategories=(e,t)=>this.restService.request({method:"POST",url:"/api/cms-service/services/CreateSubCategories",body:e},{apiName:this.apiName,...t}),this.delete=(e,t)=>this.restService.request({method:"DELETE",url:`/api/cms-service/services/${e}`},{apiName:this.apiName,...t}),this.deleteServicesCategories=(e,t)=>this.restService.request({method:"DELETE",url:`/api/cms-service/services/DeleteCategories/${e}`},{apiName:this.apiName,...t}),this.deleteServicesSubCategories=(e,t)=>this.restService.request({method:"DELETE",url:`/api/cms-service/services/DeleteSubCategories/${e}`},{apiName:this.apiName,...t}),this.disable=(e,t)=>this.restService.request({method:"POST",url:`/api/cms-service/services/disable/${e}`},{apiName:this.apiName,...t}),this.downloadAttachment=(e,t,i)=>this.restService.request({method:"GET",url:"/api/cms-service/services/DownloadAttachment",params:{attachmentId:e,entity:t}},{apiName:this.apiName,...i}),this.downloadAttachmentBlobByAttachmentIdAndEntity=(e,t,i)=>this.restService.request({method:"GET",url:"/api/cms-service/services/DownloadAttachmentBlob",params:{attachmentId:e,entity:t}},{apiName:this.apiName,...i}),this.downloadAttachmentDetailBlobByIdAndEntity=(e,t,i)=>this.restService.request({method:"GET",url:"/api/cms-service/services/DownloadAttachmentDetailBlob",params:{id:e,entity:t}},{apiName:this.apiName,...i}),this.downloadAttachmentDetailImageByIdAndEntityAndDownloadToken=(e,t,i,_)=>this.restService.request({method:"GET",url:"/api/cms-service/services/DownloadAttachmentDetailImage",params:{id:e,entity:t,downloadToken:i}},{apiName:this.apiName,..._}),this.downloadAttachmentImageByAttachmentIdAndEntityAndDownloadToken=(e,t,i,_)=>this.restService.request({method:"GET",url:"/api/cms-service/services/DownloadAttachmentImage",params:{attachmentId:e,entity:t,downloadToken:i}},{apiName:this.apiName,..._}),this.enable=(e,t)=>this.restService.request({method:"POST",url:`/api/cms-service/services/enable/${e}`},{apiName:this.apiName,...t}),this.get=(e,t)=>this.restService.request({method:"GET",url:`/api/cms-service/services/${e}`},{apiName:this.apiName,...t}),this.getDownloadToken=e=>this.restService.request({method:"GET",url:"/api/cms-service/services/download-token"},{apiName:this.apiName,...e}),this.getDurationLookup=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/duration-lookup",params:{skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getGetServiceDetailsByServiceDetails=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/get-service-details",params:{systemCode:e.systemCode,processCode:e.processCode}},{apiName:this.apiName,...t}),this.getList=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services",params:{filterText:e.filterText,serviceAr:e.serviceAr,serviceEn:e.serviceEn,durationMin:e.durationMin,durationMax:e.durationMax,status:e.status,serviceCategoryId:e.serviceCategoryId,serviceSubCategoryId:e.serviceSubCategoryId,getFavorite:e.getFavorite,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getListAsExcelFile=(e,t)=>this.restService.request({method:"GET",responseType:"blob",url:"/api/cms-service/services/as-excel-file",params:{downloadToken:e.downloadToken,filterText:e.filterText,serviceAr:e.serviceAr,serviceEn:e.serviceEn,durationMin:e.durationMin,durationMax:e.durationMax,status:e.status,serviceCategoryId:e.serviceCategoryId,serviceSubCategoryId:e.serviceSubCategoryId,getFavorite:e.getFavorite}},{apiName:this.apiName,...t}),this.getListPublic=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/GetListPublicAsync",params:{filterText:e.filterText,serviceAr:e.serviceAr,serviceEn:e.serviceEn,durationMin:e.durationMin,durationMax:e.durationMax,status:e.status,serviceCategoryId:e.serviceCategoryId,serviceSubCategoryId:e.serviceSubCategoryId,getFavorite:e.getFavorite,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getListStatistics=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/GetListStatisticsAsync",params:{filterText:e.filterText,serviceAr:e.serviceAr,serviceEn:e.serviceEn,durationMin:e.durationMin,durationMax:e.durationMax,status:e.status,serviceCategoryId:e.serviceCategoryId,serviceSubCategoryId:e.serviceSubCategoryId,getFavorite:e.getFavorite,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getPublic=(e,t)=>this.restService.request({method:"GET",url:`/api/cms-service/services/Public/${e}`},{apiName:this.apiName,...t}),this.getPublicCategoriesList=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/GetCategoriesPublicList",params:{filterText:e.filterText,nameAr:e.nameAr,nameEn:e.nameEn,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getPublicServicesSubCategoriesList=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/GetSubCategoriesPublic",params:{filterText:e.filterText,nameAr:e.nameAr,nameEn:e.nameEn,serviceCategoryId:e.serviceCategoryId,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getSServicesCategories=(e,t)=>this.restService.request({method:"GET",url:`/api/cms-service/services/GetCategories/${e}`},{apiName:this.apiName,...t}),this.getServiceCategoryLookup=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/service-category-lookup",params:{filter:e.filter,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getServiceLookup=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/service-lookup",params:{filter:e.filter,status:e.status,serviceCategoryId:e.serviceCategoryId,serviceSubCategoryId:e.serviceSubCategoryId,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getServicePublicLookup=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/service-lookup-public",params:{filter:e.filter,status:e.status,serviceCategoryId:e.serviceCategoryId,serviceSubCategoryId:e.serviceSubCategoryId,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getServiceSubCategoryLookup=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/service-sub-category-lookup",params:{filter:e.filter,serviceCategoryId:e.serviceCategoryId,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getServicesCategoriesList=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/GetCategories",params:{filterText:e.filterText,nameAr:e.nameAr,nameEn:e.nameEn,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getServicesSubCategories=(e,t)=>this.restService.request({method:"GET",url:`/api/cms-service/services/GetSubCategories/${e}`},{apiName:this.apiName,...t}),this.getServicesSubCategoriesList=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/GetSubCategories",params:{filterText:e.filterText,nameAr:e.nameAr,nameEn:e.nameEn,serviceCategoryId:e.serviceCategoryId,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getServicesSubCategoriesWithNavigationProperties=(e,t)=>this.restService.request({method:"GET",url:`/api/cms-service/services/GetSubCategoriesWithNavigation/${e}`},{apiName:this.apiName,...t}),this.getSystemsLookup=(e,t)=>this.restService.request({method:"GET",url:"/api/cms-service/services/cstsystems-lookup",params:{filter:e.filter,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:this.apiName,...t}),this.getUserQuickAccessServiceList=e=>this.restService.request({method:"GET",url:"/api/cms-service/services/QuickAccessServiceList"},{apiName:this.apiName,...e}),this.getWithNavigationProperties=(e,t)=>this.restService.request({method:"GET",url:`/api/cms-service/services/with-navigation-properties/${e}`},{apiName:this.apiName,...t}),this.getWithNavigationPropertiesPublic=(e,t)=>this.restService.request({method:"GET",url:`/api/cms-service/services/with-navigation-Public-properties/${e}`},{apiName:this.apiName,...t}),this.removeFavoriteServiceById=(e,t)=>this.restService.request({method:"POST",url:`/api/cms-service/services/RemoveFavoriteService/${e}`},{apiName:this.apiName,...t}),this.update=(e,t,i)=>this.restService.request({method:"POST",url:`/api/cms-service/services/${e}`,body:t},{apiName:this.apiName,...i}),this.updateServicesCategories=(e,t,i)=>this.restService.request({method:"PUT",url:`/api/cms-service/services/UpdateCategories/${e}`,body:t},{apiName:this.apiName,...i}),this.updateServicesSubCategories=(e,t,i)=>this.restService.request({method:"PUT",url:`/api/cms-service/services/UpdateSubCategories/${e}`,body:t},{apiName:this.apiName,...i}),this.updateUserQuickAccessServiceList=(e,t)=>this.restService.request({method:"POST",url:"/api/cms-service/services/QuickAccessServiceList",body:e},{apiName:this.apiName,...t})}static#e=this.\u0275fac=function(e){return new(e||r)(c.\u0275\u0275inject(a.RestService))};static#t=this.\u0275prov=c.\u0275\u0275defineInjectable({token:r,factory:r.\u0275fac,providedIn:"root"})}return r})()},95909:(g,n,s)=>{s.d(n,{i:()=>v});var a=s(81011),c=s(11705);let v=(()=>{class r{constructor(h){this.restService=h,this.apiName="UserProfileService",this.get=e=>this.restService.request({method:"GET",url:"/api/UserProfileService/user-profile"},{apiName:this.apiName,...e}),this.getIdentificationCard=e=>this.restService.request({method:"GET",url:"/api/UserProfileService/user-profile/IdentificationCard"},{apiName:this.apiName,...e}),this.updateContactInfo=(e,t)=>this.restService.request({method:"PUT",url:"/api/UserProfileService/user-profile/UpdateContactInfo",body:e},{apiName:this.apiName,...t}),this.updateImage=(e,t)=>this.restService.request({method:"PUT",url:"/api/UserProfileService/user-profile/UpdateImage",body:e},{apiName:this.apiName,...t})}static#e=this.\u0275fac=function(e){return new(e||r)(c.\u0275\u0275inject(a.RestService))};static#t=this.\u0275prov=c.\u0275\u0275defineInjectable({token:r,factory:r.\u0275fac,providedIn:"root"})}return r})()}}]);